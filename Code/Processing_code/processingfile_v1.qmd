---
title: "An example cleaning script"
author: "Jenna Luc"
date: "2025-03-05"
output: html_document
---


# Setup


```{r}
require(dplyr) 
require(tidyr) 
require(skimr) 
```


# Data loading 

```{r}
setwd("../../Project-template/Data/Raw_data")

data_location <- "../../Data/Raw_data/penguins_raw_dirty.csv"
data_path <- "../../Data/Raw_data"
```

```{r}
rawdata <- read.csv(data_location, check.names=FALSE)
```


# Check data

```{r}
dictionary <- read.csv(paste(data_path, "datadictionary.csv", sep=""))
print(dictionary)
```


```{r}
dplyr::glimpse(rawdata)
summary(rawdata)
head(rawdata)
skimr::skim(rawdata)
```
# Histograms of raw data
```{r}
hist(rawdata$"Culmen Length (mm)", main="Histogram of Culmen Length (mm)", xlab="Culmen Length (mm)", col="lightblue", breaks=30)

hist(rawdata$"Body Mass (g)", main="Histogram of Body Mass (g)", xlab="Body Mass (g)", col="orange", breaks=30)
```

# Bivariate plot for raw data
```{r}
plot(rawdata$"Body Mass (g)", rawdata$"Culmen Length (mm)", main="Body Mass vs. Culmen Length", xlab="Body Mass (g)", ylab="Culmen Length (mm)", col="yellow", pch=20)
```

# Cleaning


```{r}
unique(rawdata$Species)
```

```{r}
d1 <- rawdata
```

```{r}
ii <- grep("PengTin", d1$Species)
d1$Species[ii] <- "Adelie Penguin (Pygoscelis adeliae)"
```
# repeat for other misspelled species

```{r}
ii <- grep("Pengufn", d1$Species)
d1$Species[ii] <- "Adelie Penguin (Pygoscelis adeliae)"
unique(d1$Species)   # look at partially fixed data again  
```

```{r}
ii <- grep("PeOguin", d1$Species)
d1$Species[ii] <- "Adelie Penguin (Pygoscelis adeliae)"
unique(d1$Species)
```

```{r}
ii <- grep("AdeKie", d1$Species)
d1$Species[ii] <- "Adelie Penguin (Pygoscelis adeliae)"
unique(d1$Species)
```

```{r}
ii <- grep("AdelieMPenguin", d1$Species)
d1$Species[ii] <- "Adelie Penguin (Pygoscelis adeliae)"
unique(d1$Species)
```

```{r}
ii <- grep("Ventoo", d1$Species)
d1$Species[ii] <- "Gentoo penguin (Pygoscelis papua)"
unique(d1$Species)
```

```{r}
d1$Species <- gsub(" penguin", " Penguin", d1$Species)
unique(d1$Species)
```

# Species name shortening 

```{r}
d1$Species <- gsub(" .*", "", d1$Species)
```

```{r}
cl <- d1$"Culmen Length (mm)" 
cl[ cl == "missing" ] <- NA  # find cl==missing and replace "missing" with NA
cl <- as.numeric(cl)  # coerce to numeric
d1$"Culmen Length (mm)" <- cl
```

```{r}
skimr::skim(d1)
hist(d1$"Culmen Length (mm)")
```

```{r}
plot(d1$"Body Mass (g)", d1$"Culmen Length (mm)")
```

```{r}
d2 <- d1 
cl[ cl > 300 ] 
```

# Excluding NA's 
```{r}
cl[ !is.na(cl) & cl>300 ]
```

```{r}
cl[ !is.na(cl) & cl>300 ] <- cl[ !is.na(cl) & cl>300 ]/10  

d2$"Culmen Length (mm)" <- cl
```

```{r}
skimr::skim(d2)
hist(d2$"Culmen Length (mm)")
plot(d2$"Body Mass (g)", d2$"Culmen Length (mm)")
```

```{r}
hist(d2$"Body Mass (g)")
```

# Removing "tiny" masses (we only want adult data) and remove any missing data. 

```{r}
d3 <- d2
mm <- d3$"Body Mass (g)"

mm[ mm < 100 ] <- NA       # replace tiny masses with NA
nas <- which( is.na(mm) )  # find which rows have NA for mass

d3 <- d3[ -nas, ]   # drop the penguins (rows) with missing masses

skimr::skim(d3)
hist(d3$"Body Mass (g)")

plot(d3$"Body Mass (g)", d3$"Culmen Length (mm)")
```

# After cleaning, check the data again
```{r}
hist(d2$"Culmen Length (mm)", main="Histogram of Cleaned Culmen Length (mm)", xlab="Culmen Length (mm)", col="lightblue", breaks=30)

hist(d2$"Body Mass (g)", main="Histogram of Cleaned Body Mass (g)", xlab="Body Mass (g)", col="lightgreen", breaks=30)
```

# Summary of cleaned data
```{r}
summary(d2$"Culmen Length (mm)")
summary(d2$"Body Mass (g)")
skimr::skim(d2)
```


```{r}
d3$Species <- as.factor(d3$Species)
d3$Sex <- as.factor(d3$Sex)
d3$Island <- as.factor(d3$Island)  
skimr::skim(d3)
```

# Save data

```{r}
processeddata <- d3
```


```{r}
save_data_location <- "../../Data/Processed_data/processeddata.rds"
saveRDS(processeddata, file = save_data_location)

save_data_location_csv <- "../../Data/Processed_data/processeddata.csv"
write.csv(processeddata, file = save_data_location_csv, row.names=FALSE)
```


# Notes 

-  Anything you don't want loaded into the Quarto file but 
keep in the R file, just give it its own label and then just leave that label out of the Quarto file. For example, you may try excluding some of the excessive comments. 

-  Dealing with NA or "bad" data:
Removing anyone who had "faulty" or missing data is one approach, but it's often not the best. Based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep individuals with some missing information)

-  Saving data as RDS:
I suggest you save your processed and cleaned data as RDS or RDA/Rdata files.  This preserves coding like factors, characters, numeric, etc.  If you save as CSV, that information would get lost.
However, CSV is better for sharing with others since it's plain text. 

-  If you do CSV, you must to write down somewhere what each variable is (i.e. in a data dictionary).

-  See here for some suggestions on how to store your processed data:
<http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata>
